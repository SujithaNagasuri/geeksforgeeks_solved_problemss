rotate a linked list

Given a singly linked list of size N. The task is to left-shift the linked list by k nodes, where k is a given positive integer smaller than or equal to length of the linked list.

Example 1:

Input:
N = 5
value[] = {2, 4, 7, 8, 9}
k = 3
Output: 8 9 2 4 7
Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7

class Solution{
    //Function to rotate a linked list.
    public Node rotate(Node head, int k) 
    {
        // add code here
        Node current = head;
        int i=1;
        while(i<=k)
        {
            Node newnode = new Node(current.data);
            Node temp = head;
            while(temp.next != null)
            {
                temp = temp.next;
            }
            temp.next = newnode;
            current = current.next;
            i++;
        }
        return current;
    }
}
