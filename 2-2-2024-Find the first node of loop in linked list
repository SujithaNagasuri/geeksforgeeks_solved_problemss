Find the first node of loop in linked list

Given a singly linked list of N nodes. Find the first node of the loop if the linked list has a loop. If a loop is present return the node data of the first node of the loop else return -1.

class Solution {
    //Function to find first node if the linked list has a loop.
    public static int findFirstNode(Node head)
    {
        HashSet<Node> s = new HashSet<Node>();
        Node current = head;
         if (head == null || head.next == null)
       return -1;
        while(current != null && current.next!= null)
        {
            if(s.contains(current))
            {
                return current.data;
            }
            s.add(current);
            current = current.next;
        }
        return -1;
        //code here
    }
}
